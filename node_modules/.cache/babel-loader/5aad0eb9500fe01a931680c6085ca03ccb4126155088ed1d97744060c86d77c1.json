{"ast":null,"code":"var _jsxFileName = \"E:\\\\Masters\\\\Semester 2\\\\MUI\\\\Programming Exercise\\\\Minesweeper\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./styles.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GRID_SIZE = 10;\nconst MINE_COUNT = 10;\nconst generateGrid = () => {\n  let grid = Array(GRID_SIZE).fill().map(() => Array(GRID_SIZE).fill({\n    mine: false,\n    revealed: false,\n    flagged: false,\n    adjacent: 0\n  }));\n  let minesPlaced = 0;\n  while (minesPlaced < MINE_COUNT) {\n    let row = Math.floor(Math.random() * GRID_SIZE);\n    let col = Math.floor(Math.random() * GRID_SIZE);\n    if (!grid[row][col].mine) {\n      grid[row][col] = {\n        ...grid[row][col],\n        mine: true\n      };\n      minesPlaced++;\n    }\n  }\n  return calculateAdjacency(grid);\n};\nconst calculateAdjacency = grid => {\n  const directions = [[-1, -1], [-1, 0], [-1, 1], [0, -1], [0, 1], [1, -1], [1, 0], [1, 1]];\n  return grid.map((row, rIdx) => row.map((cell, cIdx) => {\n    if (cell.mine) return cell;\n    let count = 0;\n    directions.forEach(([dx, dy]) => {\n      const nr = rIdx + dx;\n      const nc = cIdx + dy;\n      if (nr >= 0 && nr < GRID_SIZE && nc >= 0 && nc < GRID_SIZE && grid[nr][nc].mine) {\n        count++;\n      }\n    });\n    return {\n      ...cell,\n      adjacent: count\n    };\n  }));\n};\nconst Minesweeper = () => {\n  _s();\n  const [grid, setGrid] = useState(generateGrid);\n  const [gameOver, setGameOver] = useState(false);\n  const [gameWon, setGameWon] = useState(false);\n  useEffect(() => {\n    if (!gameOver) {\n      const revealedCells = grid.flat().filter(cell => cell.revealed).length;\n      const totalCells = GRID_SIZE * GRID_SIZE - MINE_COUNT;\n      if (revealedCells === totalCells) {\n        setGameWon(true);\n        alert(\"You Win!\");\n      }\n    }\n  }, [grid, gameOver]);\n  const revealCell = (row, col) => {\n    if (grid[row][col].mine) {\n      setGameOver(true);\n      alert(\"Game Over!\");\n      return;\n    }\n    let newGrid = [...grid];\n    newGrid[row][col] = {\n      ...newGrid[row][col],\n      revealed: true\n    };\n    setGrid(newGrid);\n  };\n  const flagCell = (e, row, col) => {\n    e.preventDefault();\n    let newGrid = [...grid];\n    newGrid[row][col] = {\n      ...newGrid[row][col],\n      flagged: !newGrid[row][col].flagged\n    };\n    setGrid(newGrid);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Minesweeper\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Right-click to flag a cell. Click to reveal.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid\",\n      children: grid.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: row.map((cell, colIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `cell ${cell.revealed ? \"revealed\" : \"\"} ${cell.flagged ? \"flagged\" : \"\"}`,\n          onClick: () => revealCell(rowIndex, colIndex),\n          onContextMenu: e => flagCell(e, rowIndex, colIndex),\n          children: cell.revealed ? cell.mine ? \"ðŸ’£\" : cell.adjacent || \"\" : cell.flagged ? \"ðŸš©\" : \"\"\n        }, colIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 15\n        }, this))\n      }, rowIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), (gameOver || gameWon) && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        setGrid(generateGrid);\n        setGameOver(false);\n        setGameWon(false);\n      },\n      children: \"Restart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 33\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n};\n_s(Minesweeper, \"lbnvyh24RcSWy1PWMs61kufr1PI=\");\n_c = Minesweeper;\nexport default Minesweeper;\nvar _c;\n$RefreshReg$(_c, \"Minesweeper\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","GRID_SIZE","MINE_COUNT","generateGrid","grid","Array","fill","map","mine","revealed","flagged","adjacent","minesPlaced","row","Math","floor","random","col","calculateAdjacency","directions","rIdx","cell","cIdx","count","forEach","dx","dy","nr","nc","Minesweeper","_s","setGrid","gameOver","setGameOver","gameWon","setGameWon","revealedCells","flat","filter","length","totalCells","alert","revealCell","newGrid","flagCell","e","preventDefault","children","fileName","_jsxFileName","lineNumber","columnNumber","className","rowIndex","colIndex","onClick","onContextMenu","_c","$RefreshReg$"],"sources":["E:/Masters/Semester 2/MUI/Programming Exercise/Minesweeper/src/App.js"],"sourcesContent":["\r\nimport React, { useState, useEffect } from \"react\";\r\nimport \"./styles.css\";\r\n\r\nconst GRID_SIZE = 10;\r\nconst MINE_COUNT = 10;\r\n\r\nconst generateGrid = () => {\r\n  let grid = Array(GRID_SIZE)\r\n    .fill()\r\n    .map(() => Array(GRID_SIZE).fill({ mine: false, revealed: false, flagged: false, adjacent: 0 }));\r\n\r\n  let minesPlaced = 0;\r\n  while (minesPlaced < MINE_COUNT) {\r\n    let row = Math.floor(Math.random() * GRID_SIZE);\r\n    let col = Math.floor(Math.random() * GRID_SIZE);\r\n    if (!grid[row][col].mine) {\r\n      grid[row][col] = { ...grid[row][col], mine: true };\r\n      minesPlaced++;\r\n    }\r\n  }\r\n  \r\n  return calculateAdjacency(grid);\r\n};\r\n\r\nconst calculateAdjacency = (grid) => {\r\n  const directions = [\r\n    [-1, -1], [-1, 0], [-1, 1],\r\n    [0, -1],          [0, 1],\r\n    [1, -1], [1, 0], [1, 1]\r\n  ];\r\n  \r\n  return grid.map((row, rIdx) =>\r\n    row.map((cell, cIdx) => {\r\n      if (cell.mine) return cell;\r\n      \r\n      let count = 0;\r\n      directions.forEach(([dx, dy]) => {\r\n        const nr = rIdx + dx;\r\n        const nc = cIdx + dy;\r\n        if (nr >= 0 && nr < GRID_SIZE && nc >= 0 && nc < GRID_SIZE && grid[nr][nc].mine) {\r\n          count++;\r\n        }\r\n      });\r\n      \r\n      return { ...cell, adjacent: count };\r\n    })\r\n  );\r\n};\r\n\r\nconst Minesweeper = () => {\r\n  const [grid, setGrid] = useState(generateGrid);\r\n  const [gameOver, setGameOver] = useState(false);\r\n  const [gameWon, setGameWon] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (!gameOver) {\r\n      const revealedCells = grid.flat().filter(cell => cell.revealed).length;\r\n      const totalCells = GRID_SIZE * GRID_SIZE - MINE_COUNT;\r\n      if (revealedCells === totalCells) {\r\n        setGameWon(true);\r\n        alert(\"You Win!\");\r\n      }\r\n    }\r\n  }, [grid, gameOver]);\r\n\r\n  const revealCell = (row, col) => {\r\n    if (grid[row][col].mine) {\r\n      setGameOver(true);\r\n      alert(\"Game Over!\");\r\n      return;\r\n    }\r\n    let newGrid = [...grid];\r\n    newGrid[row][col] = { ...newGrid[row][col], revealed: true };\r\n    setGrid(newGrid);\r\n  };\r\n\r\n  const flagCell = (e, row, col) => {\r\n    e.preventDefault();\r\n    let newGrid = [...grid];\r\n    newGrid[row][col] = { ...newGrid[row][col], flagged: !newGrid[row][col].flagged };\r\n    setGrid(newGrid);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Minesweeper</h1>\r\n      <p>Right-click to flag a cell. Click to reveal.</p>\r\n      <div className=\"grid\">\r\n        {grid.map((row, rowIndex) => (\r\n          <div key={rowIndex} className=\"row\">\r\n            {row.map((cell, colIndex) => (\r\n              <div\r\n                key={colIndex}\r\n                className={`cell ${cell.revealed ? \"revealed\" : \"\"} ${cell.flagged ? \"flagged\" : \"\"}`}\r\n                onClick={() => revealCell(rowIndex, colIndex)}\r\n                onContextMenu={(e) => flagCell(e, rowIndex, colIndex)}\r\n              >\r\n                {cell.revealed ? (cell.mine ? \"ðŸ’£\" : cell.adjacent || \"\") : cell.flagged ? \"ðŸš©\" : \"\"}\r\n              </div>\r\n            ))}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      {(gameOver || gameWon) && <button onClick={() => { setGrid(generateGrid); setGameOver(false); setGameWon(false); }}>Restart</button>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Minesweeper;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}